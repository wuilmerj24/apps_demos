export declare function getter<T>(_this: any, property: T | {
    (): T;
}): T;
export declare namespace collections {
    function jsArrayToNSArray<T>(str: T[]): NSArray<T>;
    function nsArrayToJSArray<T>(a: NSArray<T>): Array<T>;
}
export declare function getRootViewController(): UIViewController;
export declare function getWindow(): UIWindow;
export declare function setWindowBackgroundColor(value: string): void;
export declare function isLandscape(): boolean;
export declare const MajorVersion: number;
export declare function openFile(filePath: string): boolean;
export declare function getCurrentAppPath(): string;
export declare function joinPaths(...paths: string[]): string;
export declare function getVisibleViewController(rootViewController: UIViewController): UIViewController;
export declare function applyRotateTransform(transform: CATransform3D, x: number, y: number, z: number): CATransform3D;
export declare function getShadowLayer(nativeView: UIView, name?: string, create?: boolean): CALayer;
export declare function createUIDocumentInteractionControllerDelegate(): NSObject;
export declare function isRealDevice(): boolean;
export declare function printCGRect(rect: CGRect): string;
export declare function snapshotView(view: UIView, scale: number): UIImage;
export declare function copyLayerProperties(view: UIView, toView: UIView, customProperties?: {
    view?: Array<keyof UIView>;
    layer?: Array<keyof CALayer>;
}): void;
export declare function animateWithSpring(options?: {
    tension?: number;
    friction?: number;
    mass?: number;
    delay?: number;
    velocity?: number;
    animateOptions?: UIViewAnimationOptions;
    animations?: () => void;
    completion?: (finished?: boolean) => void;
}): void;
