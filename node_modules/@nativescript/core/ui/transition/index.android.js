import { _resolveAnimationCurve } from '../animation';
import lazy from '../../utils/lazy';
const _defaultInterpolator = lazy(() => new android.view.animation.AccelerateDecelerateInterpolator());
let transitionId = 0;
export class Transition {
    constructor(duration = 350, curve) {
        this._duration = duration;
        this._interpolator = curve ? _resolveAnimationCurve(curve) : _defaultInterpolator();
        transitionId++;
        this.id = transitionId;
    }
    getDuration() {
        return this._duration;
    }
    setDuration(value) {
        this._duration = value;
    }
    getCurve() {
        return this._interpolator;
    }
    animateIOSTransition(transitionContext, fromViewCtrl, toViewCtrl, operation) {
        throw new Error('Abstract method call');
    }
    createAndroidAnimator(transitionType) {
        throw new Error('Abstract method call');
    }
    toString() {
        return `Transition@${this.id}`;
    }
}
Transition.AndroidTransitionType = {
    enter: 'enter',
    exit: 'exit',
    popEnter: 'popEnter',
    popExit: 'popExit',
};
//# sourceMappingURL=index.android.js.map